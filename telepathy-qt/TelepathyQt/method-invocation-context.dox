/*
 * This file is part of TelepathyQt
 *
 * @copyright Copyright (C) 2011 Collabora Ltd. <http://www.collabora.co.uk/>
 * @copyright Copyright (C) 2011 Nokia Corporation
 * @license LGPL 2.1
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */

/**
 * \class Tp::MethodInvocationContext
 * \ingroup utils
 * \headerfile TelepathyQt/method-invocation-context.h <TelepathyQt/MethodInvocationContext>
 *
 * \brief The MethodInvocationContext class provides a way for the service implementation to
 * respond to method calls.
 *
 * The methods setFinished() and setFinishedWithError() can be used to indicate
 * whether the method call succeeded or failed.
 *
 * If neither setFinished() nor setFinishedWithError() is called explicitly,
 * the method call will be considered to have failed.
 *
 " In case an asynchronous operation needs to be performed when implementing a method call
 * receiving a MethodInvocationContextPtr object, a reference to this object may be kept around
 * until all asynchronous operations finish, and the appropriate finish method
 * should be called to indicate whether the method call succeeded or failed later.
 */
